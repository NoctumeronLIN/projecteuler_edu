# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

print('So we start from 1 to something, to find Fibonacci numbers \n Please, type top number (be like 4000000)')
top_sequ_limit = int(input())
low_sequ_limit = 1
new_sequ_number = 0
summ_of_founded_Fibonacci_numbers = 0
summ_of_founded_even_Fibonacci_numbers = 0
summ_of_founded_odd_Fibonacci_numbers = 0
summ_of_started_sequence = 0+1+2
summ_of_even_number = 0
Even_Fibonacci_number = 0
Start_sequ_step_number = 0
First_sequ_step_number = 1
Second_sequ_step_number = First_sequ_step_number + Start_sequ_step_number
Third_sequ_step_number = Second_sequ_step_number + First_sequ_step_number
for New_sequ_step in range(low_sequ_limit, top_sequ_limit):
    while (Second_sequ_step_number + Third_sequ_step_number) < top_sequ_limit:
        New_start_sequ_step_number = First_sequ_step_number
        New_first_sequ_step_number = Second_sequ_step_number
        New_second_sequ_step_number = Third_sequ_step_number
        New_third_sequ_step_number = New_second_sequ_step_number + New_first_sequ_step_number
        First_sequ_step_number = New_first_sequ_step_number
        Second_sequ_step_number = New_second_sequ_step_number
        Third_sequ_step_number = New_third_sequ_step_number
        summ_of_founded_Fibonacci_numbers += Third_sequ_step_number
        if Third_sequ_step_number % 2 == 0:
            summ_of_founded_even_Fibonacci_numbers += Third_sequ_step_number
            print('We found EVEN number!!!', + Third_sequ_step_number)
        else:
            summ_of_founded_odd_Fibonacci_numbers += Third_sequ_step_number
            print('We found ODD number!!!', + Third_sequ_step_number)
print('Summ of even = ', + summ_of_founded_even_Fibonacci_numbers)
print('Summ of odd = ', + summ_of_founded_odd_Fibonacci_numbers)
print('Summ of all founded numbers', + (summ_of_founded_Fibonacci_numbers + summ_of_started_sequence))